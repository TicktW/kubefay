---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubefay-agent
  namespace: {{ .Values.namespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubefay-agent
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - pods
      - endpoints
      - services
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - watch
      - list
      - create
      - update
  - apiGroups:
      - clusterinformation.kubefay.tanzu.vmware.com
    resources:
      - kubefayagentinfos
    verbs:
      - get
      - create
      - update
      - delete
  - apiGroups:
      - controlplane.kubefay.tanzu.vmware.com
      - networking.kubefay.tanzu.vmware.com
    resources:
      - networkpolicies
      - appliedtogroups
      - addressgroups
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - controlplane.kubefay.tanzu.vmware.com
    resources:
      - nodestatssummaries
    verbs:
      - create
  - apiGroups:
      - controlplane.kubefay.tanzu.vmware.com
    resources:
      - networkpolicies/status
    verbs:
      - create
      - get
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  # This is the content of built-in role kube-system/extension-apiserver-authentication-reader.
  # But it doesn't have list/watch permission before K8s v1.17.0 so the extension apiserver (kubefay-agent) will
  # have permission issue after bumping up apiserver library to a version that supports dynamic authentication.
  # See https://github.com/kubernetes/kubernetes/pull/85375
  # To support K8s clusters older than v1.17.0, we grant the required permissions directly instead of relying on
  # the extension-apiserver-authentication role.
  - apiGroups:
      - ""
    resourceNames:
      - extension-apiserver-authentication
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - kubefay-ca
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ops.kubefay.tanzu.vmware.com
    resources:
      - traceflows
      - traceflows/status
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - kubefay.kubefay.github.com
    resources:
      - subnets
    verbs:
      - get
      - watch
      - list
      - update
      - patch
      - create
      - delete
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubefay-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubefay-agent
subjects:
  - kind: ServiceAccount
    name: kubefay-agent
    namespace: kube-system

