apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/config: 03ee0481c65f3ec8ff9e879ff10c3cf65991a347a7aec1c9bc866b019ec470f1
    kubectl.kubernetes.io/default-container: kubefay-agent
  creationTimestamp: "2022-06-13T11:16:23Z"
  generateName: kubefay-agent-
  labels:
    app: kubefay
    component: kubefay-agent
    controller-revision-hash: 777844bd5c
    pod-template-generation: "1"
  name: kubefay-agent-trflt
  namespace: kube-system
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: kubefay-agent
    uid: a2c8316c-e768-4575-8803-2f64677abc32
  resourceVersion: "892"
  uid: 4e1b08eb-a98d-4174-b9d6-d532139b69e9
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - kind-control-plane
  containers:
  - args:
    - "1000000"
    command:
    - sleep
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    image: kubefay/kubefay-ubuntu:latest
    imagePullPolicy: IfNotPresent
    name: kubefay-agent
    ports:
    - containerPort: 10350
      hostPort: 10350
      name: api
      protocol: TCP
    resources:
      requests:
        cpu: 200m
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/kubefay/kubefay-agent.conf
      name: kubefay-config
      readOnly: true
      subPath: kubefay-agent.conf
    - mountPath: /var/run/kubefay
      name: host-var-run-kubefay
    - mountPath: /var/run/openvswitch
      name: host-var-run-kubefay
      subPath: openvswitch
    - mountPath: /var/lib/cni
      name: host-var-run-kubefay
      subPath: cni
    - mountPath: /var/log/kubefay
      name: host-var-log-kubefay
    - mountPath: /host/proc
      name: host-proc
      readOnly: true
    - mountPath: /host/var/run/netns
      mountPropagation: HostToContainer
      name: host-var-run-netns
      readOnly: true
    - mountPath: /run/xtables.lock
      name: xtables-lock
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-rrlqz
      readOnly: true
  - args:
    - --start-ovs-only
    command:
    - start_ovs_netdev
    image: kubefay/kubefay-ubuntu:latest
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - /bin/sh
        - -c
        - timeout 10 container_liveness_probe ovs
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10
    name: kubefay-ovs
    resources:
      requests:
        cpu: 200m
    securityContext:
      capabilities:
        add:
        - SYS_NICE
        - NET_ADMIN
        - SYS_ADMIN
        - IPC_LOCK
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/openvswitch
      name: host-var-run-kubefay
      subPath: openvswitch
    - mountPath: /var/log/openvswitch
      name: host-var-log-kubefay
      subPath: openvswitch
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-rrlqz
      readOnly: true
  dnsPolicy: ClusterFirstWithHostNet
  enableServiceLinks: true
  hostNetwork: true
  initContainers:
  - command:
    - pwd
    env:
    - name: SKIP_CNI_BINARIES
    image: kubefay/kubefay-ubuntu:latest
    imagePullPolicy: Never
    name: install-cni
    resources:
      requests:
        cpu: 100m
    securityContext:
      capabilities:
        add:
        - SYS_MODULE
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/kubefay/kubefay-cni.conflist
      name: kubefay-config
      readOnly: true
      subPath: kubefay-cni.conflist
    - mountPath: /host/etc/cni/net.d
      name: host-cni-conf
    - mountPath: /host/opt/cni/bin
      name: host-cni-bin
    - mountPath: /lib/modules
      name: host-lib-modules
      readOnly: true
    - mountPath: /var/run/kubefay
      name: host-var-run-kubefay
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-rrlqz
      readOnly: true
  nodeName: kind-control-plane
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kubefay-agent
  serviceAccountName: kubefay-agent
  terminationGracePeriodSeconds: 30
  tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      name: kubefay-config
    name: kubefay-config
  - hostPath:
      path: /etc/cni/net.d
      type: ""
    name: host-cni-conf
  - hostPath:
      path: /opt/cni/bin
      type: ""
    name: host-cni-bin
  - hostPath:
      path: /proc
      type: ""
    name: host-proc
  - hostPath:
      path: /var/run/netns
      type: ""
    name: host-var-run-netns
  - hostPath:
      path: /var/run/kubefay
      type: DirectoryOrCreate
    name: host-var-run-kubefay
  - hostPath:
      path: /var/log/kubefay
      type: DirectoryOrCreate
    name: host-var-log-kubefay
  - hostPath:
      path: /lib/modules
      type: ""
    name: host-lib-modules
  - hostPath:
      path: /run/xtables.lock
      type: FileOrCreate
    name: xtables-lock
  - name: kube-api-access-rrlqz
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2022-06-13T11:16:25Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2022-06-13T11:16:46Z"
    message: 'containers with unready status: [kubefay-ovs]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2022-06-13T11:16:46Z"
    message: 'containers with unready status: [kubefay-ovs]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2022-06-13T11:16:23Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://6f6debe79ee80415d61d6e5bbb7dc69ca0ddc79d7a6f8a6b6420897a5bb09178
    image: docker.io/kubefay/kubefay-ubuntu:latest
    imageID: docker.io/library/import-2022-06-13@sha256:4d2e1a21698e5de5bec094a003bd5025307afc1dde7fb2d71dad0525c45114ba
    lastState: {}
    name: kubefay-agent
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2022-06-13T11:16:26Z"
  - containerID: containerd://21ebca81b38f0122c5f0b760a1adf4446c256a5ea978227fe31e6add2f4a5370
    image: docker.io/kubefay/kubefay-ubuntu:latest
    imageID: docker.io/library/import-2022-06-13@sha256:4d2e1a21698e5de5bec094a003bd5025307afc1dde7fb2d71dad0525c45114ba
    lastState:
      terminated:
        containerID: containerd://21ebca81b38f0122c5f0b760a1adf4446c256a5ea978227fe31e6add2f4a5370
        exitCode: 0
        finishedAt: "2022-06-13T11:17:52Z"
        reason: Completed
        startedAt: "2022-06-13T11:17:52Z"
    name: kubefay-ovs
    ready: false
    restartCount: 4
    started: false
    state:
      waiting:
        message: back-off 1m20s restarting failed container=kubefay-ovs pod=kubefay-agent-trflt_kube-system(4e1b08eb-a98d-4174-b9d6-d532139b69e9)
        reason: CrashLoopBackOff
  hostIP: 172.18.0.2
  initContainerStatuses:
  - containerID: containerd://bce330dc0e7b31539c53fcd59d82a94e0bb526912cae9ab432e18e94a26f337f
    image: docker.io/kubefay/kubefay-ubuntu:latest
    imageID: docker.io/library/import-2022-06-13@sha256:4d2e1a21698e5de5bec094a003bd5025307afc1dde7fb2d71dad0525c45114ba
    lastState: {}
    name: install-cni
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: containerd://bce330dc0e7b31539c53fcd59d82a94e0bb526912cae9ab432e18e94a26f337f
        exitCode: 0
        finishedAt: "2022-06-13T11:16:25Z"
        reason: Completed
        startedAt: "2022-06-13T11:16:25Z"
  phase: Running
  podIP: 172.18.0.2
  podIPs:
  - ip: 172.18.0.2
  qosClass: Burstable
  startTime: "2022-06-13T11:16:23Z"
