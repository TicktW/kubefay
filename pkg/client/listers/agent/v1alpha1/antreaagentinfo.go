// MIT License Copyright (C) 2022 kubefay@https://github.com/kubefay/kubefay
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubefay/kubefay/pkg/apis/agent/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AntreaAgentInfoLister helps list AntreaAgentInfos.
// All objects returned here must be treated as read-only.
type AntreaAgentInfoLister interface {
	// List lists all AntreaAgentInfos in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AntreaAgentInfo, err error)
	// Get retrieves the AntreaAgentInfo from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AntreaAgentInfo, error)
	AntreaAgentInfoListerExpansion
}

// antreaAgentInfoLister implements the AntreaAgentInfoLister interface.
type antreaAgentInfoLister struct {
	indexer cache.Indexer
}

// NewAntreaAgentInfoLister returns a new AntreaAgentInfoLister.
func NewAntreaAgentInfoLister(indexer cache.Indexer) AntreaAgentInfoLister {
	return &antreaAgentInfoLister{indexer: indexer}
}

// List lists all AntreaAgentInfos in the indexer.
func (s *antreaAgentInfoLister) List(selector labels.Selector) (ret []*v1alpha1.AntreaAgentInfo, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AntreaAgentInfo))
	})
	return ret, err
}

// Get retrieves the AntreaAgentInfo from the index for a given name.
func (s *antreaAgentInfoLister) Get(name string) (*v1alpha1.AntreaAgentInfo, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("antreaagentinfo"), name)
	}
	return obj.(*v1alpha1.AntreaAgentInfo), nil
}
